transform CelsiusToFahrenheit {
    from Celsius oftype decimal;
    to Fahrenheit oftype decimal;
    Fahrenheit: (Celsius * 9/5) + 32;
}

pipeline TemperaturesPipeline {
    block DataExtractor oftype HttpExtractor {
        url: "https://www.mowesta.com/data/measure/mowesta-dataset-20221107.zip";
    }

    block ZipArchiveExtractor oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block FilePicker oftype FilePicker {
        path: "/data.csv";
    }

    block TextFileInterpreter oftype TextFileInterpreter { }

    block CSVInterpreter oftype CSVInterpreter {
        delimiter: ";";
    }

    block TemperaturesHeader oftype CellWriter {
        at: cell E1;
        write: ["Temperatur"];
    }

    block BatteryTemperaturesHeader oftype CellWriter {
        at: cell J1;
        write: ["Batterietemperatur"]; 
    }

    block TableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
            "Geraet" oftype integer,
            "Hersteller" oftype text,
            "Model" oftype text,
            "Monat" oftype integer,
            "Temperatur" oftype decimal,
            "Batterietemperatur" oftype decimal,
            "Geraet aktiv" oftype text
        ];
    }

    block ColumnDeleter oftype ColumnDeleter {
        delete: [column F, column G, column H, column I,  column L, column M, column N, column O];
    }

    block CelToFahrTemperaturTransform oftype TableTransformer {
        inputColumns: ['Temperatur'];
        outputColumn: 'Temperatur';
        use: CelsiusToFahrenheit;
    }

    block CelToFahrBatterietemperaturTransform oftype TableTransformer {
        inputColumns: ['Batterietemperatur'];
        outputColumn: 'Batterietemperatur';
        use: CelsiusToFahrenheit;
    }

    block SQLiteLoader oftype SQLiteLoader {
        table: "temperatures";
        file: "./temperatures.sqlite";
    }

    DataExtractor
        -> ZipArchiveExtractor
        -> FilePicker
        -> TextFileInterpreter
        -> CSVInterpreter
        -> TemperaturesHeader
        -> BatteryTemperaturesHeader
        -> ColumnDeleter
        -> TableInterpreter
        -> CelToFahrTemperaturTransform
        -> CelToFahrBatterietemperaturTransform
        -> SQLiteLoader;
}
